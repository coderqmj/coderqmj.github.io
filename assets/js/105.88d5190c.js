(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{621:function(e,n,t){"use strict";t.r(n);var s=t(44),a=Object(s.a)({},(function(){var e=this.$createElement,n=this._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("h3",{attrs:{id:"_1-分离webpack配置后可以build但无法serve"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-分离webpack配置后可以build但无法serve"}},[this._v("#")]),this._v(" 1.分离webpack配置后可以build但无法serve")]),this._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v('背景：\n\t1.常规配置（不分离）是没问题的，分离后的build也是没问题的，但是进行分离后的serve就出现了问题，无法加载到babel插件react-refresh/babel\n\t\n分析原因：\n\t1.排查是在开发环境下，webpack.dev中plugins使用了ReactRefreshWebpackPlugin，但是在babel没有使用到react-refresh/babel。\n\t2.原因是在webpack.common.js设置process.env.NODE_ENV出现了问题，赋值到undefined，env.production本身是一个undefined类型，但是赋值给process.env.NODE_ENV时，内部转换成了个字符串的undefined。\n\t3.然后在babel分离判断（!isProduction取反判断）的时候，if (!isProduction) plugins.push(["react-refresh/babel"]);，无法push进去。导致出现错误。\n\n解决：\n\tpackage.json传过来的参数是否env.production为true，然后给process.env.NODE_ENV "production" 或者 "development"，然后再在babel.config去判断true or false，再去push就没问题。\n\t\n问题?\n\t1.如何进行webpack配置分离？（重点）\n\t2.为什么在赋值的时候process.env.NODE_ENV会转变成字符串“undefined”？（重点）\n\t3.env.production的值是哪里来的？\n\t\tpackage.json --env production || development\n')])])])])}),[],!1,null,null,null);n.default=a.exports}}]);